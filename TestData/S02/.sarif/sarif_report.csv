SARIF File,Driver Name,Total Results,ruleId,message,path,startLine,endLine,startColumn,endColumn,isCorrect
codeql-result.sarif,CodeQL,1,cs/sql-injection,This query depends on [this ASP.NET Core query string](1).,Program.cs,54,,23,26,1
llms-result.sarif,openai/gpt-4.1,3,SQLInjection.RawQuery,"User input from the 'name' query parameter is concatenated directly into a SQL statement without sanitization or parameterization, allowing for SQL injection.",Program.cs,28,38,1,1,1
llms-result.sarif,openai/gpt-4.1,3,XSS.UnencodedOutput,"User-supplied 'message' from query string is injected directly into HTML without encoding or sanitization, allowing for XSS attacks.",Program.cs,40,44,1,1,1
llms-result.sarif,openai/gpt-4.1,3,XSS.UnencodedOutput,"User input returned in the SQL search result list items (<li>) is not HTML encoded, allowing stored or reflected XSS if the database is compromised or poisoned.",Program.cs,34,36,9,25,1
llms-result.sarif,deepseek/DeepSeek-V3-0324,3,SQLI-001,"User input is directly concatenated into SQL query without parameterization, allowing SQL injection",Program.cs,50,50,17,55,1
llms-result.sarif,deepseek/DeepSeek-V3-0324,3,XSS-001,"User input is directly written to response without HTML encoding, allowing XSS attacks",Program.cs,70,70,50,70,1
llms-result.sarif,deepseek/DeepSeek-V3-0324,3,XSS-002,"User input from database is directly written to response without HTML encoding, allowing XSS attacks",Program.cs,56,56,50,70,1
llms-result.sarif,mistral-ai/Mistral-Large-2411,3,SQL_INJECTION,"The query parameter 'name' is directly inserted into the SQL query, making it vulnerable to SQL injection.",Program.cs,49,49,17,56,1
llms-result.sarif,mistral-ai/Mistral-Large-2411,3,XSS,"The query parameter 'message' is directly inserted into the HTML response, making it vulnerable to XSS.",Program.cs,63,63,21,63,1
llms-result.sarif,mistral-ai/Mistral-Large-2411,3,VULNERABLE_LIBRARY,The version '9.0.5' of the 'Microsoft.Data.Sqlite' package is outdated. Consider updating to a more recent version.,S02.csproj,12,12,47,55,0
snyk-result.sarif,SnykCode,1,csharp/Sqli,"Unsanitized input from an HTTP parameter flows into the CommandText property of a SQL command, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",Program.cs,54,54,5,26,1
sonarqube-result.sarif,SonarQube,1,csharpsquid:S2077,Make sure using a dynamically formatted SQL query is safe here.,Program.cs,54,54,4,19,1
